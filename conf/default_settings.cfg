#===========================================================================
# SCENARIO CONFIGURATION
#===========================================================================
Scenario.name = default_scenario-transmitRange@%%btInterface.transmitRange%%
Scenario.simulateConnections = true
Scenario.updateInterval = 1
# 43200s == 12h
Scenario.endTime = 43200

#===========================================================================
# INTERFACE SPECIFIC SETTINGS
#===========================================================================
# type          : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

[ "Bluetooth" interface for all nodes ]
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = [10, 20]

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000

# Define 6 different node groups
Scenario.nrofHostGroups = 6

#===========================================================================
# GROUP SPECIFIC SETTINGS
#===========================================================================
[ Group specific parameters' descriptions ]
# groupID       : Group's identifier. Used as the prefix of host names
# nrofHosts     : number of hosts in the group
# movementModel : movement model of the hosts (valid class name from movement package)
# waitTime      : minimum and maximum wait times (seconds) after reaching destination
# speed         : minimum and maximum speeds (m/s) when moving on a path
# bufferSize    : size of the message buffer (bytes)
# router        : router used to route messages (valid class name from routing package)
# activeTimes   : Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl        : TTL (minutes) of the messages created by this host group, default=infinite

[ Group and movement model specific settings ]
# pois          : Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#                 for ShortestPathMapBasedMovement
# okMaps        : which map nodes are OK for the group (map file indexes), default=all
#                 for all MapBasedMovent models
# routeFile     : route's file path - for MapRouteMovement
# routeType     : route's type - for MapRouteMovement

[ Common settings (for all groups) ]
Group.movementModel = ShortestPathMapBasedMovement
Group.router = EpidemicRouter               # by default, uses EpidemicRouter for this setting
Group.bufferSize = 5M
Group.waitTime = 0, 120

Group.nrofInterfaces = 1                    # all nodes have the 1 interface
Group.interface1 = btInterface              # all nodes uses bluetooth interface
Group.speed = 0.5, 1.5                      # walking speeds (range)
Group.msgTtl = 300                          # message TTL of 300 minutes (5 hours)
Group.nrofHosts = 40

[ Group 1 (pedestrian) ]
Group1.groupID = p

[ Group 2 (cars) ]
Group2.groupID = c
Group2.okMaps = 1                           # drive only on MapBasedMovement.mapFile1 route
Group2.speed = 2.7, 13.9                    # 10-50 km/h

[ Group 3 (other) ]
Group3.groupID = w

[ Group 4 (trams) ]
Group4.groupID = t
Group4.bufferSize = 50M
Group4.movementModel = MapRouteMovement     # specify movement
Group4.routeFile = data/spatial/tram3.wkt   # param route file for MapRouteMovement
Group4.routeType = 1                        # param for MapRouteMovement
Group4.waitTime = 10, 30
Group4.speed = 7, 10
Group4.nrofHosts = 2
Group4.nrofInterfaces = 2
Group4.interface1 = btInterface
Group4.interface2 = highspeedInterface

[ Group 5 (trams) ]
Group5.groupID = t
Group5.bufferSize = 50M
Group5.movementModel = MapRouteMovement
Group5.routeFile = data/spatial/tram4.wkt
Group5.routeType = 2
Group5.waitTime = 10, 30
Group5.speed = 7, 10
Group5.nrofHosts = 2

[ Group 6 (trams) ]
Group6.groupID = t
Group6.bufferSize = 50M
Group6.movementModel = MapRouteMovement
Group6.routeFile = data/spatial/tram10.wkt
Group6.routeType = 2
Group6.waitTime = 10, 30
Group6.speed = 7, 10
Group6.nrofHosts = 2

#===========================================================================
# EVENTS SETTINGS
#===========================================================================
[ General events parameters ]
Events.nrof = 1

[ Events 1: MessageEventGenerator specific ]
Events1.class = MessageEventGenerator # Penis
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,126
# Message ID prefix
Events1.prefix = M

#===========================================================================
# MOVEMENT SETTINGS
#===========================================================================
[ Movement model settings ]
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = [1,2]
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

[ Map based movement/movement model specific settings ]
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/spatial/roads.wkt
MapBasedMovement.mapFile2 = data/spatial/main_roads.wkt
MapBasedMovement.mapFile3 = data/spatial/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/spatial/shops.wkt

#===========================================================================
# REPORT SETTINGS
#===========================================================================
[ General ]
# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/

[ Reports ]
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport

#===========================================================================
# ROUTER SETTINGS
#===========================================================================
[ ProphetRouter ]
ProphetRouter.secondsInTimeUnit = 30

[ SprayAndWaitRouter ]
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

[ Optimization settings ]
# these affect the speed of the simulation `data/events` World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

#===========================================================================
# GUI settings
#===========================================================================
# GUI underlay image settings
GUI.UnderlayImage.fileName = data/spatial/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015
# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100

# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
# GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$